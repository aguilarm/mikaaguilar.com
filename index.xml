<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mika Aguilar</title><link>https://www.mikaaguilar.com/</link><description>Recent content on Mika Aguilar</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://www.mikaaguilar.com/index.xml" rel="self" type="application/rss+xml"/><item><title>2020/21 Retrospective</title><link>https://www.mikaaguilar.com/posts/2020-21-retrospective/</link><pubDate>Fri, 31 Dec 2021 17:10:08 -0600</pubDate><guid>https://www.mikaaguilar.com/posts/2020-21-retrospective/</guid><description>It is difficult to believe that we&amp;rsquo;re entering 2022 already! I did not do a retrospective in 2020, so I thought I would reflect on the last two years together. This was largely a time of putting the things I planned on doing next in my 2019 post into action and seeing the benefits pan out. Finally, midway through 2021 I decided to resign from my position and begin a ~year long sabbatical to spend time getting some perspective on my life and career up to this point.</description></item><item><title>Searching for Birds</title><link>https://www.mikaaguilar.com/projects/searching-for-birds/</link><pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/projects/searching-for-birds/</guid><description>I created this site as a creative outlet during my sabbatical. It&amp;rsquo;s evolved into a showcase and exercise of my design, writing, photography, and programming skills.
My goal is to both make the birding hobby easier to jump into and highlight how the climate crisis is impacting birds.
Additionally, I have used it as a proof of concept for a very basic content management platform using NextJS and Markdown. To that end, all posts are saved as plain markdown files that are processed by NextJS getStaticProps to build a mostly static site.</description></item><item><title>Procedural Galaxy</title><link>https://www.mikaaguilar.com/projects/procedural-galaxy/</link><pubDate>Mon, 12 Oct 2020 17:40:14 -0600</pubDate><guid>https://www.mikaaguilar.com/projects/procedural-galaxy/</guid><description>I have always been fascinated by procedural games like Minecraft and No Man&amp;rsquo;s Sky. So, I set off on a search for a way to get my hands dirty building something using the concept. This project is the result.
I found this video on youtube where a 2D galaxy map is built. He uses C++ there, but I&amp;rsquo;ve re-created that implementation in javascript. I&amp;rsquo;ve also used Github Actions to push this project up to Github Pages every time I push a change, and Snowpack to compile the source code.</description></item><item><title>Using Union Types in TypeScript</title><link>https://www.mikaaguilar.com/posts/using-union-types-in-typescript/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/using-union-types-in-typescript/</guid><description>In recent projects, my team has been using a relatively strict TypeScript config, and it&amp;rsquo;s been excellent.
A common scenario for us is a need for a union type that we need to perform different actions at runtime. For example, we often have a CurrentUser object that can either be loading, authenticated, or anonymous.
Because we&amp;rsquo;re using mostly static pages with a detatched auth system (primarily Firebase), systems that require user information on the frontend need to account for a short period where the user is loading before doing anything.</description></item><item><title>Procedural Voxels</title><link>https://www.mikaaguilar.com/projects/procedural-voxels/</link><pubDate>Thu, 18 Jun 2020 17:40:14 -0600</pubDate><guid>https://www.mikaaguilar.com/projects/procedural-voxels/</guid><description>Following my small project exploring procedural generation in 2D, where I built a procedurally generated galaxy map, I eventually fell down the rabbit hole of minecraft clones.
I am of course very intrigued by the handful of very interesting programming problems presented by minecraft and have set out to build a clone myself. I found react-three-fiber and built the three-js hello cube example in it so I could get my bearings and wrap my head around the basics.</description></item><item><title>Part 3: Layouts</title><link>https://www.mikaaguilar.com/posts/blogging-on-hugo/part-3/</link><pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/blogging-on-hugo/part-3/</guid><description>You&amp;rsquo;ll need some templates to render your new content. Hugo templates exist in the /layouts directory. The docs for the base templates are decent, but I&amp;rsquo;ll give a quick rundown from top to bottom.
Baseof At the very top of your site is the layouts/default/baseof.html. This includes the outer shell of your site starting from the &amp;lt;html&amp;gt; element. Here is a minimal example I pulled from the docs:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 &amp;lt;!</description></item><item><title>Part 2: Setup, Directories, and Content</title><link>https://www.mikaaguilar.com/posts/blogging-on-hugo/part-2/</link><pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/blogging-on-hugo/part-2/</guid><description>This guide assumes that you aren&amp;rsquo;t going to read any of the Hugo docs. I&amp;rsquo;m totally ok with that - I&amp;rsquo;ll link you to the parts that I&amp;rsquo;d otherwise repeat. We&amp;rsquo;ll also be sticking with the bare minimum needed to get going with a blog and have a great time. There are plenty of bells and whistles I&amp;rsquo;ll show you in a later section of the guide.
Step 0 - Installing Hugo The very first thing you need to do is install the binary.</description></item><item><title>Part 1: Why Hugo</title><link>https://www.mikaaguilar.com/posts/blogging-on-hugo/part-1/</link><pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/blogging-on-hugo/part-1/</guid><description>This site is running Hugo with GitHub pages, and I am really happy with the setup. There are a lot of options for spinning up a personal blog site, and I really think building with Hugo is the best option.
I&amp;rsquo;m going to guide you through building a blog with it in this series of posts.
Lets start off with the most important question - why.
The JAMStack ðŸŽ¸ Hugo is a static site generator, which is the Markdown bit of the JAMStack.</description></item><item><title>How I Stay Focused with Work Logs</title><link>https://www.mikaaguilar.com/posts/work-logs/</link><pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/work-logs/</guid><description>At any moment, I tend to have quite a few things that need my attention. I&amp;rsquo;ve found that I&amp;rsquo;ll need to context switch several times during the day - from answering a question to attending a meeting or checking in on a long-running process.
Jumping in and out of contexts can be pretty difficult and will really cost a lot of time.
In an effort to be as available as possible for the occasional interruption without spending a ton of time getting back into whatever I&amp;rsquo;m working on, I&amp;rsquo;ve been using timestamped work logs.</description></item><item><title>Debouncing and Throttling React Events</title><link>https://www.mikaaguilar.com/posts/react-event-debounce-throttle/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/react-event-debounce-throttle/</guid><description>Throttling and debouncing events in React is something that is often overlooked and can usually save you from a significant amount of UI lag or jankiness. Doing either one is relatively simple but easy to implement incorrectly.
I think it may be useful to learn how these work by slowly evolving approaches until we land on a nice simple one.
What&amp;rsquo;s the Difference? Throttling an event means &amp;lsquo;do this at most once every x milliseconds&amp;rsquo;.</description></item><item><title>2019 Retrospective</title><link>https://www.mikaaguilar.com/posts/2019-tech-stack-retrospective/</link><pubDate>Tue, 24 Dec 2019 17:10:08 -0600</pubDate><guid>https://www.mikaaguilar.com/posts/2019-tech-stack-retrospective/</guid><description>This past year my tech stack saw some exciting changes. We fully embraced React Hooks, Typescript and GraphQL. We poked around the JAMStack and built a fairly large NextJS application. That was a real pivot from the primarily Drupal based projects we&amp;rsquo;ve done before. While we&amp;rsquo;re still using Drupal as a headless CMS, we have ditched the entire front-end of it. Server-wise, Kubernetes and Docker have remained a nice constant this year with a year perhaps defined by stability while the tech reached maturity.</description></item><item><title>Https Explained Simply</title><link>https://www.mikaaguilar.com/posts/https-explained-simply/</link><pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/https-explained-simply/</guid><description>At work, we run a lot of different websites. From time to time, we need to renew the HTTPS certs used by some of the unfortunate few not powered by Let&amp;rsquo;s Encrypt yet. Recently, I needed a simple way to describe what was happening through the whole process.
When I turned to google looking for a simple explanation, what I found was either a bit too simple or way too deep.</description></item><item><title>Tuning Php Fpm</title><link>https://www.mikaaguilar.com/posts/tuning-php-fpm/</link><pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/tuning-php-fpm/</guid><description>We&amp;rsquo;ve been running php-fpm at a pretty significant scale for quite some time now and have played around with a bunch of different performance configurations in an attempt to do so efficiently. Our stack is varnish &amp;gt; nginx &amp;gt; php-fpm. Php is running Drupal behind all of that, and the vast majority of a site is hitting varnish cache. Occasionally we&amp;rsquo;ll have to warm up caches or something will leak through and we&amp;rsquo;ll have to deal with a sizeable surge of concurrent requests.</description></item><item><title>Bookshelf</title><link>https://www.mikaaguilar.com/posts/bookshelf/</link><pubDate>Sun, 07 Jul 2019 17:10:08 -0600</pubDate><guid>https://www.mikaaguilar.com/posts/bookshelf/</guid><description>I&amp;rsquo;ve decided to put together a list of books I&amp;rsquo;ve read so I can direct folks to this post when asked for something to read. Most of the programming books have free online editions, so get to it!
I&amp;rsquo;m also a huge fan of sci-fi, so I&amp;rsquo;ve thrown a couple of my favorites in at the end.
If you&amp;rsquo;re more visual, I&amp;rsquo;ve also made this list of talks I recommend.</description></item><item><title>Building Decoupled Drupal Sites 2019</title><link>https://www.mikaaguilar.com/posts/building-decoupled-drupal-sites-2019/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/building-decoupled-drupal-sites-2019/</guid><description>Alright, you&amp;rsquo;ve seen it everywhere for the last couple of years - decoupled Drupal. I&amp;rsquo;ve been eyeing the available solutions for some time and finally feel like things are in a good spot to make the jump over. Buckle up and join me on my journey to find a rightful heir to Drupal 8&amp;rsquo;s frontend.
If you want to skip the journey and get some real decisions, scroll on down to the last section.</description></item><item><title>Decoupled Drupal with Gatsby Starter Kit</title><link>https://www.mikaaguilar.com/projects/decoupled-drupal-gatsby-starter-kit/</link><pubDate>Wed, 23 Jan 2019 17:10:08 -0600</pubDate><guid>https://www.mikaaguilar.com/projects/decoupled-drupal-gatsby-starter-kit/</guid><description>In doing the research that lead to my post about decoupled Drupal, I created a boilerplate project for using Gatsby with Drupal. The project is pretty basic but should have everything you need to get started. It uses docker-compose so you can run it anywhere you have docker installed.</description></item><item><title>Easily Patch Contrib Drupal Modules Composer</title><link>https://www.mikaaguilar.com/posts/easily-patch-contrib-drupal-modules-composer/</link><pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/easily-patch-contrib-drupal-modules-composer/</guid><description>The workflow for patching Drupal modules can be a bit obtuse if you do everything by hand, but with composer it&amp;rsquo;s easy!
I manage all contributed modules with composer, so an example composer.json might look like this:
{ &amp;quot;name&amp;quot;: &amp;quot;example&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;Drupal 8 Example&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;project&amp;quot;, &amp;quot;minimum-stability&amp;quot;: &amp;quot;dev&amp;quot;, &amp;quot;prefer-stable&amp;quot;: true, &amp;quot;repositories&amp;quot;: [ { &amp;quot;type&amp;quot;:&amp;quot;composer&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://packages.drupal.org/8&amp;quot; } ], &amp;quot;require&amp;quot;: { &amp;quot;cweagans/composer-patches&amp;quot;: &amp;quot;^1.6&amp;quot;, &amp;quot;composer/installers&amp;quot;: &amp;quot;^1.6&amp;quot;, &amp;quot;drupal-composer/drupal-scaffold&amp;quot;: &amp;quot;^2.5&amp;quot;, &amp;quot;drupal/core&amp;quot;: &amp;quot;^8.6&amp;quot;, &amp;quot;drush/drush&amp;quot;: &amp;quot;^9.5&amp;quot;, &amp;quot;drupal/health_check&amp;quot;: &amp;quot;^1.</description></item><item><title>Talks I Love</title><link>https://www.mikaaguilar.com/posts/talks-i-love/</link><pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/posts/talks-i-love/</guid><description>All of these talks have had a large impact on how I approach problems or understand different aspects of the art of programming. If you have the time, I really recommend going through each and every one of these videos.
If you prefer reading, I&amp;rsquo;ve got you covered with this post listing my book recommendations.
I&amp;rsquo;ll start off by listing talks that I think are relevant no matter what problem space you&amp;rsquo;re working in, and add some more targeted talks to different sections below.</description></item><item><title>Coral Talk</title><link>https://www.mikaaguilar.com/projects/coral-talk/</link><pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/projects/coral-talk/</guid><description>When we moved a very high traffic client onto Kubernetes, we tried to split up their stack a bit.
The site is largely static, except for comments. So there was definitely an opportunity to save resources if we could spin off comments into a microservice decoupled from our main Drupal application.
We decided to use Coral Talk, and I spent quite a bit of time working on various custom plugins to fit our use-case.</description></item><item><title>Argo</title><link>https://www.mikaaguilar.com/projects/argo/</link><pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/projects/argo/</guid><description>When we made the switch to Kubernetes as a shop at Favish, we needed a way to ease onboarding everyone to the new stack.
Coming from the world of Vagrant where a pre-made virtual machine could be downloaded that included everything you needed, this tool was created in Golang to automatically install and configure things like Docker and kubectl for use with our clusters.
At the time, there were a few rough edges involved in interacting with the cluster to get things like database dumps and files into and out of it.</description></item><item><title>Squarereddit</title><link>https://www.mikaaguilar.com/projects/squarereddit/</link><pubDate>Sun, 16 Nov 2014 17:42:31 -0600</pubDate><guid>https://www.mikaaguilar.com/projects/squarereddit/</guid><description>I really enjoy having nice desktop backgrounds, and for awhile I was grabbing them from some subreddits for architecture and city-scapes. I decided to try out Angular and the Reddit API to make an easy to browse grid of images sourced from Reddit.
This project was primarily a way for me to experiment with Angular and as such I have not kept up with it.</description></item><item><title>Parallax Photos</title><link>https://www.mikaaguilar.com/projects/parallax-photos/</link><pubDate>Tue, 19 Aug 2014 17:40:14 -0600</pubDate><guid>https://www.mikaaguilar.com/projects/parallax-photos/</guid><description>The parrallax.js splash page is pretty awesome, so I decided to play with the library.
I cut up a few WW2 aircraft scenes and turned them into parrallax.</description></item><item><title>Javascript Game Engine</title><link>https://www.mikaaguilar.com/projects/javascript-game-engine/</link><pubDate>Tue, 05 Aug 2014 17:30:03 -0600</pubDate><guid>https://www.mikaaguilar.com/projects/javascript-game-engine/</guid><description>When I was starting to dig in to Javascript on my own, I was having a bit of a hard time getting my hands dirty in really large applications. I eventually found a (since removed) Udacity course on HTML5 Game Development which was produced by Google and walked students through building a game engine in JS.
The course was already quite dated when I found it. As a result, I needed to do quite a bit of self learning to fix up broken dependencies and patch old code bugs.</description></item><item><title>MikaAguilar.com</title><link>https://www.mikaaguilar.com/projects/mika-aguilar-com/</link><pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate><guid>https://www.mikaaguilar.com/projects/mika-aguilar-com/</guid><description>You&amp;rsquo;re lookin at it! I&amp;rsquo;ve been maintaining this site in it&amp;rsquo;s current repo since 2014. Before that, I had a pretty minimal portfolio hosted on my university&amp;rsquo;s website that began it&amp;rsquo;s life in 2006.
This is my personal playground, and I&amp;rsquo;m constantly iterating on it. It&amp;rsquo;s been on Angular, used a metric ton of Parallax, lived in Drupal, and a couple of other exploratory rewrites.
As of writing, I am using Hugo and GitHub Pages to build and host the site.</description></item></channel></rss>